[{"C:\\Users\\t-shuku\\spark\\ChargeController\\charge-controller\\src\\index.tsx":"1","C:\\Users\\t-shuku\\spark\\ChargeController\\charge-controller\\src\\reportWebVitals.ts":"2","C:\\Users\\t-shuku\\spark\\ChargeController\\charge-controller\\src\\App.tsx":"3","C:\\Users\\t-shuku\\spark\\ChargeController\\charge-controller\\src\\components\\battery.tsx":"4","C:\\Users\\t-shuku\\spark\\ChargeController\\charge-controller\\src\\components\\switch.tsx":"5","C:\\Users\\t-shuku\\spark\\ChargeController\\charge-controller\\src\\components\\types.ts":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":440,"mtime":1609408104474,"results":"10","hashOfConfig":"8"},{"size":2258,"mtime":1608532412040,"results":"11","hashOfConfig":"8"},{"size":3363,"mtime":1609408651377,"results":"12","hashOfConfig":"8"},{"size":266,"mtime":1608806560273,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"gah2gq",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\t-shuku\\spark\\ChargeController\\charge-controller\\src\\index.tsx",[],["29","30"],"C:\\Users\\t-shuku\\spark\\ChargeController\\charge-controller\\src\\reportWebVitals.ts",[],"C:\\Users\\t-shuku\\spark\\ChargeController\\charge-controller\\src\\App.tsx",[],"C:\\Users\\t-shuku\\spark\\ChargeController\\charge-controller\\src\\components\\battery.tsx",[],"C:\\Users\\t-shuku\\spark\\ChargeController\\charge-controller\\src\\components\\switch.tsx",["31"],"import React, { useEffect, useState } from \"react\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport axios from \"axios\";\r\nimport { ESwitch_t, Error } from \"./types\";\r\nimport { VscSync } from \"react-icons/vsc\";\r\n\r\nexport const Switch = () => {\r\n  const [ESwitch, setESwitch] = useState(new ESwitch_t());\r\n  const [error, setError] = useState(new Error());\r\n  const [loading, setLoading] = useState(true);\r\n  const url = \"http://localhost:3030/api/switch\";\r\n\r\n  console.log(\"ESwitch:\", ESwitch);\r\n\r\n  // api call to get switch status\r\n  const getESwitch = async () => {\r\n    setLoading(true);\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        console.log(\"ES Data:\", res);\r\n        let data = res.data;\r\n        // console.log('data:',data);\r\n        setESwitch(data);\r\n      })\r\n      .catch((err) => {\r\n        let nError = cloneDeep(error);\r\n        nError.flag = true;\r\n        nError.msg = err.message;\r\n        console.log(nError);\r\n        setError(nError);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getESwitch();\r\n  }, []);\r\n\r\n  const testNodeMCUConnection = async (url: string) => {\r\n    await axios\r\n      .get(url)\r\n      .then(() => {\r\n        return { data: true };\r\n      })\r\n      .catch(() => {\r\n        return { data: false };\r\n      });\r\n  };\r\n\r\n  const OK = !loading && !error.flag;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"div-switch\">\r\n        <label className=\"switch-header\"> Charger Switch </label>\r\n        <br />\r\n        {OK && (\r\n          <>\r\n            <div>\r\n              <label>Url : </label>\r\n              <input\r\n                style={{width:\"17em\"}}\r\n                placeholder=\"Switch url\"\r\n                value={ESwitch.url}\r\n                type=\"text\"\r\n                onChange={(url) => {\r\n                  ESwitch.url = url.target.value;\r\n                  setESwitch(cloneDeep(ESwitch));\r\n                }}\r\n              />\r\n              <button\r\n                style={{ marginLeft: \"1em\" }}\r\n                onClick={() => {\r\n                  testNodeMCUConnection(ESwitch.url);\r\n                }}\r\n                title=\"title\"\r\n              > Test Connection </button>\r\n              <VscSync className=\"Icon-loading\" />\r\n            </div>\r\n            <label>\r\n              Status : {ESwitch.status ? \"Connected\" : \"NOT Connected\"}{\" \"}\r\n            </label>\r\n            <div>\r\n              <label>Min Battery Level : </label>\r\n              <input\r\n                className=\"input-btry\"\r\n                value={ESwitch.minBtryLevel ? ESwitch.minBtryLevel : \"-N/A-\"}\r\n                onChange={() => {\r\n                  console.log(\"minBatteryLevel Changes\");\r\n                }}\r\n                maxLength={3}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>Max Battery Level : </label>\r\n              <input\r\n                className=\"input-btry\"\r\n                value={ESwitch.maxBtryLevel ? ESwitch.maxBtryLevel : \"-N/A-\"}\r\n                onChange={() => {\r\n                  console.log(\"maxBatteryLevel Changes\");\r\n                }}\r\n              />\r\n            </div>\r\n            <button> Save </button>\r\n          </>\r\n        )}\r\n        {loading && <label>Loading...</label>}\r\n        {error.flag && <label>{`Error : ${error.msg}`}</label>}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\t-shuku\\spark\\ChargeController\\charge-controller\\src\\components\\types.ts",[],["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":40,"column":6,"nodeType":"40","endLine":40,"endColumn":8,"suggestions":"41"},{"ruleId":"34","replacedBy":"42"},{"ruleId":"36","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getESwitch'. Either include it or remove the dependency array.","ArrayExpression",["46"],["44"],["45"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [getESwitch]",{"range":"49","text":"50"},[1097,1099],"[getESwitch]"]